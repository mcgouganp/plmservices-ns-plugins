{
	"name": "plugins",
	"version": "0.0.0",
	"license": "MIT",
	"scripts": {
		"setup": "npx rimraf node_modules package-lock.json dist tmp && npm i && ts-patch install",
		"start": "nps",
		"add": "nx g @nativescript/plugin-tools:add-package",
		"add-angular": "nx g @nativescript/plugin-tools:add-angular",
		"config": "nx g @nativescript/plugin-tools:config",
		"publish-packages": "nx g @nativescript/plugin-tools:publish",
		"generate-typings.ios": "cd apps/demo && TNS_DEBUG_METADATA_PATH=\"$(pwd)/metadata\" tns build ios && TNS_TYPESCRIPT_DECLARATIONS_PATH=\"$(pwd)/typings\" tns build ios && echo 'Now look for your library typings in demo/typings. Afterwards, remove that folder, and the (intermediate) metadata-* folders.'",
		"generate-typings.android": "echo '##### Download the latest relevant .aar file from https://mvnrepository.com/artifact/io.particle, rename .aar to .zip and extract it. Then move classes.jar to the plugin /src folder' && java -jar ../../android-dts-generator/dts-generator/build/libs/dts-generator.jar -input ./classes.jar -output platforms/android/typings && rimraf classes.jar && echo '##### Done! Deleted src/classes.jar, and generated typings in src/platforms/android/typings/'"
	},
	"private": true,
	"devDependencies": {
		"@angular/animations": "^10.1.4",
		"@angular/common": "^10.1.4",
		"@angular/compiler": "^10.1.4",
		"@angular/compiler-cli": "^10.1.4",
		"@angular/core": "^10.1.4",
		"@angular/forms": "^10.1.4",
		"@angular/platform-browser": "^10.1.4",
		"@angular/platform-browser-dynamic": "^10.1.4",
		"@angular/router": "^10.1.4",
		"@nativescript/angular": "~10.1.0",
		"@nativescript/core": "^7.0.10",
		"@nativescript/ios": "^7.0.1",
		"@nativescript/plugin-tools": "~1.0.0",
		"@nativescript/types": "~7.0.0",
		"@nativescript/webpack": "^3.0.5",
		"@ngtools/webpack": "^10.1.4",
		"nativescript-vue": "~2.8.0",
		"nativescript-vue-template-compiler": "~2.8.0",
		"ng-packagr": "^10.1.2",
		"rxjs": "~6.6.0",
		"typescript": "~3.9.7",
		"zone.js": "0.11.1"
	},
	"husky": {
		"hooks": {
			"pre-commit": "lint-staged"
		}
	},
	"lint-staged": {
		"**/*": [
			"nx format:write --files"
		]
	}
}
